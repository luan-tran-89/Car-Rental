
spring.application.name=payment-service
server.port=8085
# Ensure that this port doesn't conflict with other services

# Database configurations
spring.datasource.url=jdbc:mysql://localhost:3306/car-rental
spring.datasource.username=root
spring.datasource.password=12345678
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=embedded
spring.main.allow-bean-definition-overriding=true

# Eureka Configurations
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.metadataMap.instanceId=${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.registryFetchIntervalSeconds=5
eureka.client.serviceUrl.registerWithEureka=true
eureka.client.serviceUrl.defaultZone=http://localhost:8888/eureka/
eureka.client.enabled=true
spring.cloud.service-registry.auto-registration.enabled=true

feign.client.url.rentalService=http://localhost:8081


# Kafka Configurations
spring.kafka.consumer.group-id=pm
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.bootstrap-servers=http://localhost:9092

#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=my-group
#spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers=localhost:9092

# Serializer and Deserializer classes. In our case, we use String.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.group-id=payment-group
